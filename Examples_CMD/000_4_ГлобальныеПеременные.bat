:::::::::::::::::::::::::::::::::::::::::::::
goto initEnd
call :init %0
:init
@echo off
if "%cd%\" EQU "%~dp1" ((start notepad++ %1)&&(exit))
cd %~dp1
title %~1
setlocal EnableDelayedExpansion
cls
exit /b
:initEnd
:::::::::::::::::::::::::::::::::::::::::::::
call :init %0
:::::::::::::::::::::::::::::::::::::::::::::
::Получение всех переменных среды
::если хотите, есть setx /? - создание глобальных системных переменных,
::мне им пользоваться пока не приходилось
set
rem Что нужно знать:
rem rem и :: - два способа комментирования программного кода
rem по умолчанию согласимся использовать rem
rem для документирования функций и описания текстовой теории
rem :: -  для комментирования программных кодов 
rem и коментариев низкой важности. Пример:
rem Чтобы добавить переменную, в командной строке введите
::----------------------------------------------
rem Eсть 2 особенности.
rem Первая при @echo on - rem выводит в консоль
rem Вторая :: - нельзя комментировать слеш "/"
rem - возникают ошибки 
:::::::::::::::::::::::::::::::::::::::::::::
(TIMEOUT /T 10)&&(pause)&&(exit /b)
:::::::::::::::::::::::::::::::::::::::::::::